name: Build contribution metrics

on:
  workflow_dispatch:
  schedule:
    - cron: "17 3 * * *"
  push:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch last 90 days contribution data (GraphQL)
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const to = new Date();
            const from = new Date(Date.now() - 90 * 24 * 60 * 60 * 1000);

            const fmt = d => d.toISOString().slice(0,10);

            const query = `
            query($login:String!,$from:DateTime!,$to:DateTime!){
              user(login:$login){
                contributionsCollection(from:$from,to:$to){
                  contributionCalendar{
                    totalContributions
                    weeks {
                      contributionDays {
                        date
                        contributionCount
                      }
                    }
                  }
                }
              }
            }`;

            const variables = {
              login: "MSaLeHNYM",
              from: from.toISOString(),
              to: to.toISOString()
            };

            const result = await github.graphql(query, variables);

            const weeks = result.user.contributionsCollection.contributionCalendar.weeks || [];
            const days = [];
            for (const w of weeks) {
              for (const d of w.contributionDays) {
                days.push({ date: d.date, count: d.contributionCount });
              }
            }
            days.sort((a,b) => a.date.localeCompare(b.date));

            const outDir = path.join(process.cwd(), "docs");
            if (!fs.existsSync(outDir)) fs.mkdirSync(outDir, { recursive: true });
            fs.writeFileSync(path.join(outDir, "metrics.json"), JSON.stringify({
              user: "MSaLeHNYM",
              generated_at: new Date().toISOString(),
              range: { from: fmt(from), to: fmt(to) },
              days
            }, null, 2));
            core.info(`Wrote docs/metrics.json with ${days.length} days`);

      - name: Commit & push metrics.json + page
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/metrics.json docs/index.html
          git commit -m "chore(metrics): update metrics.json" || echo "No changes"
          git push
